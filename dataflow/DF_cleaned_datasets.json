{
	"name": "DF_cleaned_datasets",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Customertable",
						"type": "DatasetReference"
					},
					"name": "customersource"
				},
				{
					"dataset": {
						"referenceName": "Ordertable",
						"type": "DatasetReference"
					},
					"name": "ordersource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "cleaned_customer",
						"type": "DatasetReference"
					},
					"name": "customersink"
				},
				{
					"dataset": {
						"referenceName": "cleaned_order",
						"type": "DatasetReference"
					},
					"name": "ordersink"
				}
			],
			"transformations": [
				{
					"name": "filteringnull"
				},
				{
					"name": "filternull"
				},
				{
					"name": "aggregatecol1"
				},
				{
					"name": "aggregatecol2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Email as string,",
				"          PhoneNumber as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          ZipCode as string,",
				"          Country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> customersource",
				"source(output(",
				"          OrderID as string,",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Quantity as string,",
				"          OrderTimestamp as string,",
				"          Price as string,",
				"          CustomerID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ordersource",
				"customersource filter(CustomerID!=\"NULL\" && FirstName!=\"NULL\" && LastName !=\"NULL\" &&Email !=\"NULL\" && PhoneNumber!=\"NULL\" &&Address !=\"NULL\" &&City !=\"NULL\" && State!=\"NULL\" && ZipCode != \"NULL\" && Country != \"NULL\") ~> filteringnull",
				"ordersource filter(OrderID!=\"NULL\" && ProductID!=\"NULL\" && ProductName!=\"NULL\" && Quantity!=\"NULL\" && OrderTimestamp!=\"NULL\" && Price!=\"NULL\" &&CustomerID!=\"NULL\") ~> filternull",
				"filteringnull aggregate(groupBy(CustomerID,",
				"          FirstName,",
				"          LastName,",
				"          Email,",
				"          PhoneNumber,",
				"          Address,",
				"          City,",
				"          State,",
				"          ZipCode,",
				"          Country),",
				"     count = count(CustomerID)) ~> aggregatecol1",
				"filternull aggregate(groupBy(OrderID,",
				"          ProductID,",
				"          ProductName,",
				"          Quantity,",
				"          OrderTimestamp,",
				"          Price,",
				"          CustomerID),",
				"     count = count(OrderID)) ~> aggregatecol2",
				"aggregatecol1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> customersink",
				"aggregatecol2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> ordersink"
			]
		}
	}
}